services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                APP_NAME: "pendataan-aplikasi"
            target: app # pastikan stage runtime bernama `app` di Dockerfile
        image: pendataan-aplikasi:beta
        container_name: pendataan-aplikasi-app
        environment:
            APP_ENV: production
            APP_DEBUG: "true"
            APP_NAME: "pendataan-aplikasi"
            DB_CONNECTION: mysql
            DB_HOST: 10.10.2.5
            DB_PORT: 3306
            DB_DATABASE: pendataan
            DB_USERNAME: wicaksu
            DB_PASSWORD: J@ck03061997
        # Mount kode + build ke volume bernama, agar bisa dishare ke nginx
        volumes:
            - appdata:/var/www/html
            # opsional: sub-mount khusus (boleh dipertahankan)
            - storage:/var/www/html/storage
            - cache:/var/www/html/bootstrap/cache
        expose:
            - "9000"
        healthcheck:
            test: ["CMD-SHELL", "php -v >/dev/null 2>&1 && php -r 'echo 1;'"]
            interval: 10s
            timeout: 5s
            retries: 5

    web:
        image: nginx:1.27-alpine
        container_name: pendataan-aplikasi-web
        depends_on:
            - app
        ports:
            - "8080:80"
        volumes:
            # mount volume yang sama, read-only
            - appdata:/var/www/html:ro
            - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        healthcheck:
            test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/health || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    appdata:
    storage:
    cache:
