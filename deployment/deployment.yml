# =========================================
# Nginx config
# =========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: pendataan-nginx-conf
  namespace: db
data:
  default.conf: |
    server {
      listen 80;
      root /var/www/html/public;
      index index.php index.html;
      client_max_body_size 64m;

      location /health { return 200 'ok'; add_header Content-Type text/plain; }

      location / {
        try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ \.php$ {
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_read_timeout 180;
      }

      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?)$ {
        expires 7d;
        access_log off;
        add_header Cache-Control "public";
      }
    }

---
# =========================================
# Deployment (php-fpm + nginx) â€” args sudah diformat array
# =========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pendataan-aplikasi
  namespace: db
spec:
  replicas: 1
  selector:
    matchLabels: { app: pendataan-aplikasi }
  template:
    metadata:
      labels: { app: pendataan-aplikasi }
    spec:
      # imagePullSecrets:
      #   - name: dockerhub-creds   # un-comment kalau repo Docker Hub private
      securityContext:
        fsGroup: 33
        fsGroupChangePolicy: Always
      volumes:
        - name: code
          emptyDir: {}
        - name: shared-rwx
          persistentVolumeClaim:
            claimName: aplikasi-pendataan
        - name: nginx-conf
          configMap:
            name: pendataan-nginx-conf
            items:
              - key: default.conf
                path: default.conf
      initContainers:
        # 0) copy source dari image ke /code
        - name: init-code
          image: docker.io/wicaksu/pendataan-aplikasi:k8s
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              set -e
              mkdir -p /code
              cp -R /var/www/html/. /code || true
              chown -R 33:33 /code
          volumeMounts:
            - name: code
              mountPath: /code

        # 1) perbaiki izin NFS
        - name: fix-perms
          image: alpine:3.20
          command: ["sh", "-c"]
          args:
            - |
              set -eux
              mkdir -p \
                /var/www/html/storage/logs \
                /var/www/html/storage/framework/cache \
                /var/www/html/storage/framework/sessions \
                /var/www/html/storage/framework/testing \
                /var/www/html/storage/framework/views \
                /var/www/html/bootstrap/cache
              : > /var/www/html/storage/logs/laravel.log || true
              chown -R 33:33 /var/www/html/storage /var/www/html/bootstrap/cache || true
              chmod -R 0777 /var/www/html/storage /var/www/html/bootstrap/cache
          volumeMounts:
            - name: shared-rwx
              mountPath: /var/www/html/storage
            - name: shared-rwx
              mountPath: /var/www/html/bootstrap/cache

        # 2) tunggu DB ready
        - name: wait-db
          image: busybox:1.36
          envFrom:
            - secretRef: { name: pendataan-aplikasi-secret }
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for DB ${DB_HOST}:${DB_PORT} ..."
              until nc -z ${DB_HOST} ${DB_PORT} >/dev/null 2>&1; do sleep 2; done
              echo "DB is up."

        # 3) artisan prepare
        - name: init-artisan
          image: docker.io/wicaksu/pendataan-aplikasi:k8s
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef: { name: pendataan-aplikasi-config }
            - secretRef: { name: pendataan-aplikasi-secret }
          command: ["sh", "-c"]
          args:
            - |
              set -e
              cd /var/www/html
              mkdir -p storage/framework/{cache,sessions,testing,views}
              mkdir -p bootstrap/cache
              php -v >/dev/null
              php artisan config:clear || true
              php artisan route:clear || true
              php artisan cache:clear || true
              php artisan view:clear || true
              php artisan storage:link || true
              php artisan config:cache
              php artisan route:cache
              php artisan migrate --force
          volumeMounts:
            - name: code
              mountPath: /var/www/html
            - name: shared-rwx
              mountPath: /var/www/html/storage
            - name: shared-rwx
              mountPath: /var/www/html/bootstrap/cache

      containers:
        # ===== app (php-fpm) =====
        - name: app
          image: docker.io/wicaksu/pendataan-aplikasi:k8s
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef: { name: pendataan-aplikasi-config }
            - secretRef: { name: pendataan-aplikasi-secret }
          ports:
            - containerPort: 9000
              name: fpm
          volumeMounts:
            - name: code
              mountPath: /var/www/html
            - name: shared-rwx
              mountPath: /var/www/html/storage
            - name: shared-rwx
              mountPath: /var/www/html/bootstrap/cache
          readinessProbe:
            tcpSocket: { port: 9000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket: { port: 9000 }
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests: { cpu: "100m", memory: "256Mi" }
            limits: { cpu: "1", memory: "1Gi" }
          securityContext:
            runAsUser: 33
            runAsGroup: 33

        # ===== web (nginx) =====
        - name: web
          image: nginx:1.27-alpine
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: code
              mountPath: /var/www/html
              readOnly: true
            - name: shared-rwx
              mountPath: /var/www/html/storage
            - name: shared-rwx
              mountPath: /var/www/html/bootstrap/cache
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          readinessProbe:
            httpGet: { path: /health, port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /health, port: 80 }
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            requests: { cpu: "50m", memory: "64Mi" }
            limits: { cpu: "500m", memory: "256Mi" }

---
# =========================================
# Service - NodePort
# =========================================
apiVersion: v1
kind: Service
metadata:
  name: pendataan-aplikasi
  namespace: db
spec:
  type: NodePort
  selector: { app: pendataan-aplikasi }
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: 32080

---
# =========================================
# HPA (opsional)
# =========================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pendataan-aplikasi
  namespace: db
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pendataan-aplikasi
  minReplicas: 1
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
